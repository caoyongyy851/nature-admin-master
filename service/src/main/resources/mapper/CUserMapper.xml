<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.nature.mapper.CUserMapper">

    <select id="countFollow" resultType="integer">
        select
        count(1)
        from
        c_user_follow
        where
        f_uid = #{param1}
        and uid = #{param2}
    </select>

    <insert id="insertFollow">
        insert into c_user_follow (f_uid, uid)
        values (#{param1}, #{param2})
    </insert>

    <delete id="deleteFollow">
        delete from c_user_follow
        where f_uid = #{param1}
        and uid = #{param2}
    </delete>

    <select id="getRatioById" resultType="decimal">
        select
        u.points/(select sum(points) from c_user)*100
        from
        c_user u
        where
        u.id = #{id}
    </select>

    <update id="addPoints">
        update
        c_user
        set points = points + #{param2}
        where
        id = #{param1}
    </update>

    <select id="getUserByOpenId" resultType="com.ruoyi.nature.dto.UserDetail">
        select
        u.*,
        c.company_name,
        c.cover
        from
        c_user u
        left join
        c_company c on u.company_id = c.id and c.status = 1
        where u.deleted = 0 and u.openid = #{openid}
    </select>

    <select id="getTopicUserList" resultType="com.ruoyi.nature.dto.UserDetail">
        SELECT
	    *
        FROM
            c_user
        WHERE
            id IN (
            SELECT DISTINCT
                uid
            FROM
                c_card
        WHERE
         checked = 1
         and deleted = 0
         and topic_id = #{param1})

    </select>
    <select id="getContextByUid" resultType="com.ruoyi.nature.dto.ContextDetail">
                select
				a.id,
        a.uid,
        a.tid,
        a.content,
        a.type,
				a.time,
				u.nickname,
				u.avatar
				from
				(select
        id,
        uid,
        cid as tid,
        content,
        0 as type,
				create_time as time
        from
        c_comment
        where
        deleted = 0
        and checked = 1
        and cid in (select id from c_card where uid = #{param3} and checked = 1 and deleted = 0)
        union all
        select
        id,
        uid,
        aid as tid,
        content,
        1 as type,
				create_time as time
        from
        c_a_comment
        where
        deleted = 0
        and checked = 1
        and aid in (select id from c_activity where pbid = #{param3} and checked = 1 and deleted = 0)) a
        inner join c_user u on a.uid = u.id
        order by a.time desc
        limit #{param1}, #{param2}
    </select>
    <select id="getContextCountByUid" resultType="int">
           select
            count(1)
				from
				(select
        id,
        uid,
        cid as tid,
        content,
        0 as type,
				create_time as time
        from
        c_comment
        where
        deleted = 0
        and checked = 1
        and cid in (select id from c_card where uid = #{param1} and checked = 1 and deleted = 0)
        union all
        select
        id,
        uid,
        aid as tid,
        content,
        1 as type,
				create_time as time
        from
        c_a_comment
        where
        deleted = 0
        and checked = 1
        and aid in (select id from c_activity where pbid = #{param1} and checked = 1 and deleted = 0)) a
        inner join c_user u on a.uid = u.id
    </select>
    <select id="getFollower" resultType="com.ruoyi.nature.dto.UserDetail">
        select
        *
        from
        c_user
        where id
        in (select uid from c_user_follow where f_uid = #{param1})
    </select>
    <select id="getFanser" resultType="com.ruoyi.nature.dto.UserDetail">
        select
        *
        from
        c_user
        where id
        in (select distinct uid from c_card_like where cid
            in (select id from c_card where uid = #{param1})
        )
    </select>

    <select id="getCeller" resultType="com.ruoyi.nature.dto.UserDetail">
        select
        *
        from
        c_user
        order by create_time desc
        limit #{param1}
    </select>

    <select id="getCountByUid" resultType="map">
        select
        (select ifnull(sum(ifnull(views, 0)),0) from c_card where uid = #{param1} ) as callers,
        (select
        count(1)
        from
        c_user
        where id
        in (select distinct uid from c_card_like where cid
            in (select id from c_card where uid = #{param1})
        ))  as fans
        from
        dual
    </select>

</mapper>
